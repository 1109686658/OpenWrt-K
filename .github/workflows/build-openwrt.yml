# This is a basic workflow to help you get started with Actions

name: Build OpenWrt-K

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Space cleanup
        run:  |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* moby* snap*
      
      
      - name: Initialization environment
        run: |
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y full-upgrade
          sudo -E apt update -y && sudo apt full-upgrade -y && sudo apt install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils clang g++ python3-distutils rsync unzip zlib1g-dev
          sudo -E systemctl daemon-reload 
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo timedatectl set-timezone "Asia/Shanghai"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Clone source code
        working-directory: /workdir
        run: |
          git clone https://git.openwrt.org/openwrt/openwrt.git
          mkdir -p package
          cd package
          mkdir -p chen
          mkdir -p cmzj_package
          cd chen
          git clone https://github.com/Lienol/openwrt-package
          git clone https://github.com/immortalwrt/luci
          git clone https://github.com/xiaorouji/openwrt-passwall -b luci
          git clone https://github.com/wongsyrone/lede-1
          git clone https://github.com/coolsnowwolf/lede
          git clone https://github.com/chenmozhijin/turboacc -b package
          cd lede
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          cd ..
          cd ..
          cd cmzj_package
          mkdir -p turboacc
          git clone https://github.com/rufengsuixing/luci-app-adguardhome
          git clone https://github.com/jerrykuku/luci-app-argon-config
          git clone https://github.com/csrutil/OpenWrt-NIC-Drivers
          git clone https://github.com/lisaac/luci-app-diskman
          git clone https://github.com/sirpdboy/luci-app-netdata
          git clone https://github.com/sirpdboy/NetSpeedTest
          git clone https://github.com/xiaorouji/openwrt-passwall
          #git clone https://github.com/xiaorouji/openwrt-passwall2
          git clone https://github.com/davidtall/openwrt-passwall2
          git clone https://github.com/tty228/luci-app-serverchan
          git clone https://github.com/jerrykuku/luci-theme-argon
          cd turboacc
          git clone https://github.com/fullcone-nat-nftables/nft-fullcone
          git clone https://github.com/chenmozhijin/turboacc
          mv ./turboacc/luci-app-turboacc ./
          rm -rf ./turboacc

      - name: copy source code
        working-directory: /workdir/package
        run: |
          cp -r ./chen/luci/applications/luci-app-transmission ./cmzj_package/
          cp -r ./chen/openwrt-package/luci-app-fileassistant ./cmzj_package/
          cp -r ./chen/openwrt-package/luci-app-socat ./cmzj_package/
          cp -r ./chen/lede/feeds/luci/applications/luci-app-baidupcs-web ./cmzj_package/
          cp -r ./chen/lede/feeds/luci/applications/luci-app-rclone ./cmzj_package/
          cp -r ./chen/lede/feeds/luci/applications/luci-app-syncdial ./cmzj_package/
          cp -r ./chen/lede/feeds/luci/applications/luci-app-usb-printer ./cmzj_package/
          cp -r ./chen/lede/feeds/luci/applications/luci-app-qbittorrent ./cmzj_package/
          cp -r ./chen/lede/feeds/luci/applications/luci-app-vlmcsd ./cmzj_package/
          cp -r ./chen/lede/feeds/packages/net/vlmcsd ./cmzj_package/
          cp -r ./chen/lede/feeds/packages/net/baidupcs-web ./cmzj_package/
          cp -r ./chen/lede/feeds/packages/net/qBittorrent ./cmzj_package/
          cp -r ./chen/lede/feeds/packages/net/qBittorrent-static ./cmzj_package/
          cp -r ./chen/lede/feeds/packages/libs/rblibtorrent ./cmzj_package/
          cp -r ./chen/lede/feeds/packages/libs/qtbase ./cmzj_package/
          cp -r ./chen/lede/feeds/packages/libs/qttools ./cmzj_package/
          cp -r ./chen/lede/feeds/luci/applications/luci-app-zerotier ./cmzj_package/
          cp -r ./chen/lede/feeds/luci/applications/luci-app-webadmin ./cmzj_package/
          cp -r ./chen/lede/feeds/luci/applications/luci-app-cifs-mount ./cmzj_package/
          cp -r ./chen/lede/package/lean/ipv6-helper ./cmzj_package/
          cp -r ./chen/lede/package/lean/ddns-scripts_aliyun ./cmzj_package/
          cp -r ./chen/lede/package/lean/ddns-scripts_dnspod ./cmzj_package/
          cp -r ./chen/lede/package/lean/r8168 ./cmzj_package/
          cp -r ./chen/lede/package/lean/shortcut-fe ./cmzj_package/turboacc/
          cp -r ./chen/openwrt-passwall/luci-app-passwall  ./cmzj_package/
          cp -r ./cmzj_package/luci-app-argon-config/po/zh_Hans ./cmzj_package/luci-app-webadmin/po/
          cp -r ./cmzj_package/luci-app-argon-config/po/zh_Hans ./cmzj_package/luci-app-netdata/po/
          cp -r ./cmzj_package/luci-app-argon-config/po/zh_Hans ./cmzj_package/luci-app-vlmcsd/po/
          cp -r ./cmzj_package/luci-app-argon-config/po/zh_Hans ./cmzj_package/NetSpeedTest/luci-app-netspeedtest/po/
          cp -r ./cmzj_package/luci-app-argon-config/po/zh_Hans ./cmzj_package/luci-app-zerotier/po/
          cp -r ./cmzj_package/luci-app-argon-config/po/zh_Hans ./cmzj_package/luci-app-usb-printer/po/
          cp -r ./cmzj_package/luci-app-argon-config/po/zh_Hans ./cmzj_package/luci-app-qbittorrent/po/
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./cmzj_package/turboacc/luci-app-turboacc/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./cmzj_package/luci-app-vlmcsd/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./cmzj_package/luci-app-webadmin/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./cmzj_package/luci-app-zerotier/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./cmzj_package/luci-app-cifs-mount/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./cmzj_package/luci-app-baidupcs-web/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./cmzj_package/luci-app-rclone/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./cmzj_package/luci-app-syncdial/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./cmzj_package/luci-app-usb-printer/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./cmzj_package/luci-app-transmission/Makefile
          sed -i 's/include ..\/..\/luci.mk/include $(TOPDIR)\/feeds\/luci\/luci.mk/' ./cmzj_package/luci-app-qbittorrent/Makefile
          sed -i 's/setting")/netdata")/' ./cmzj_package/luci-app-netdata/luasrc/controller/netdata.lua
          sed -i 's/("Base Setting"), 20/("Base Setting"), 30/' ./cmzj_package/luci-app-netdata/luasrc/controller/netdata.lua
          sed -i 's/("NetData"), 30/("NetData"), 20/' ./cmzj_package/luci-app-netdata/luasrc/controller/netdata.lua

      - name: 切换到新的稳定版分支
        working-directory: /workdir/openwrt
        run: git checkout v22.03.3

      - name: 复制cmzj_package 打补丁
        working-directory: /workdir
        run: |
          cp -r ./package/cmzj_package ./openwrt/package/cmzj_package
          mkdir -p ./openwrt/package/network/config/firewall4/patches/
          mkdir -p ./openwrt/package/libs/libnftnl/patches/
          mkdir -p ./openwrt/package/network/utils/nftables/patches/
          cp -r ./package/chen/turboacc/firewall4-7ae5e14bbd7265cc67ec870c3bb0c8e197bb7ca9/firewall4/patches/* ./openwrt/package/network/config/firewall4/patches
          cp -r ./package/chen/turboacc/libs-1.2.1/libnftnl/patches/* ./openwrt/package/libs/libnftnl/patches
          sed -i '/PKG_FIXUP:=autoreconf/'d ./openwrt/package/libs/libnftnl/Makefile
          sed -i '/^PKG_INSTALL:/i\PKG_FIXUP:=autoreconf' ./openwrt/package/libs/libnftnl/Makefile
          cp -r ./package/chen/turboacc/nftables-1.0.2/nftables/patches/* ./openwrt/package/network/utils/nftables/patches
          rm -rf ./package


      - name: 修复问题
        working-directory: /workdir/openwrt
        run: |
          sed -i 's/-full//' ./include/target.mk 
          sed -i 's/dnsmasq/dnsmasq-full/g' ./include/target.mk 
          sed -i 's/256/1024/' ./target/linux/x86/image/Makefile

      - name: smartdns
        working-directory: /workdir/openwrt
        run: |
          WORKINGDIR="`pwd`/feeds/packages/net/smartdns"
          mkdir $WORKINGDIR -p
          rm $WORKINGDIR/* -fr
          wget https://github.com/pymumu/openwrt-smartdns/archive/master.zip -O $WORKINGDIR/master.zip
          unzip $WORKINGDIR/master.zip -d $WORKINGDIR
          mv $WORKINGDIR/openwrt-smartdns-master/* $WORKINGDIR/
          rmdir $WORKINGDIR/openwrt-smartdns-master
          rm $WORKINGDIR/master.zip
          LUCIBRANCH="master" #更换此变量
          WORKINGDIR="`pwd`/feeds/luci/applications/luci-app-smartdns"
          mkdir $WORKINGDIR -p
          rm $WORKINGDIR/* -fr
          wget https://github.com/pymumu/luci-app-smartdns/archive/${LUCIBRANCH}.zip -O $WORKINGDIR/${LUCIBRANCH}.zip
          unzip $WORKINGDIR/${LUCIBRANCH}.zip -d $WORKINGDIR
          mv $WORKINGDIR/luci-app-smartdns-${LUCIBRANCH}/* $WORKINGDIR/
          rmdir $WORKINGDIR/luci-app-smartdns-${LUCIBRANCH}
          rm $WORKINGDIR/${LUCIBRANCH}.zip
      
      - name: Update feeds
        working-directory: /workdir/openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          cp -r files /workdir/openwrt/files
          cat ./config/target.config >> /workdir/openwrt/.config
          cat ./config/luci.config >> /workdir/openwrt/.config
          cat ./config/utilities.config >> /workdir/openwrt/.config
          cat ./config/network.config >> /workdir/openwrt/.config
          cat ./config/other.config >> /workdir/openwrt/.config
          cat ./config/kmod.config >> /workdir/openwrt/.config
          cat ./config/image.config >> /workdir/openwrt/.config
          cd /workdir/openwrt/
          ls

      - name: defconfig
        working-directory: /workdir/openwrt
        run: |
          ls
          make defconfig

      - name: Download packages
        working-directory: /workdir/openwrt
        run: make download -j16

      - name: Compile firmware
        working-directory: /workdir/openwrt
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        working-directory: /workdir/openwrt      
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: Upload buildinfo
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_buildinfo
          path: /workdir/openwrt/artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_package
          path: /workdir/openwrt/artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_firmware
          path: /workdir/openwrt/bin/targets/
