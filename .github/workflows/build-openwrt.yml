#MIT License

#Copyright (c) 2023 沉默の金

#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:

#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.

#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

name: Build OpenWrt-K

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
permissions:
  contents: write
  discussions: write
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:


    

      - uses: actions/checkout@v3
      - name: 建立工作文件夹
        run:  |
          cd $GITHUB_WORKSPACE
          sudo mkdir -p workspace
          sudo chown $USER:$GROUPS workspace
          cd workspace
          export WORKSPACE_ROOT_PATH="$(pwd)"
          echo "WORKSPACE_ROOT_PATH=$WORKSPACE_ROOT_PATH" >> $GITHUB_ENV
          mkdir -p package
          cd package
          export PACKAGE_ROOT_PATH="$(pwd)"
          echo "PACKAGE_ROOT_PATH=$PACKAGE_ROOT_PATH" >> $GITHUB_ENV
          mkdir -p chen
          mkdir -p cmzj_package
      - name: 下载源代码
        working-directory:  ${{ env.WORKSPACE_ROOT_PATH }}
        run: |
          git clone https://git.openwrt.org/openwrt/openwrt.git
          cd openwrt
          export OPENWRT_ROOT_PATH="$(pwd)"
          echo "OPENWRT_ROOT_PATH=$OPENWRT_ROOT_PATH" >> $GITHUB_ENV


      - name: 切换到新的稳定版分支
        working-directory: ${{ env.OPENWRT_ROOT_PATH }}
        run: git checkout v22.03.3

      - name: test
        run: |
          mkdir -p $OPENWRT_ROOT_PATH/bin/targets/x86/64/
          cp ./config/network.config $OPENWRT_ROOT_PATH/bin/targets/x86/64/
      - name: 上传日志
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: x86-64-logs
          path: "${{ env.OPENWRT_ROOT_PATH }}/logs"


      - name: 生成 release tag
        working-directory: ${{ env.OPENWRT_ROOT_PATH }}
        run: |
          echo 编译于$(date +"%Y-%m-%d %H:%M") >> release.txt
          export RELEASE_NAME="OpenWrt-K V$(date +"%y.%m.%d-%H")"
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo ${{ env.RELEASE_NAME }}
      - name: 上传 buildinfo
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_buildinfo
          path: ${{ env.OPENWRT_ROOT_PATH }}/artifact/buildinfo/

      - name: 上传 package
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_package
          path: ${{ env.OPENWRT_ROOT_PATH }}/artifact/package/

      - name: 上传 firmware
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_firmware
          path: ${{ env.OPENWRT_ROOT_PATH }}/bin/targets/

      - name: 上传到 Release
        uses: ncipollo/release-action@v1.8.0
        with:
          name: openwrt-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}
          allowUpdates: true
          replacesArtifacts: true
          tag: ${{ env.RELEASE_NAME }}
          body: 编译于$(date +"%Y-%m-%d %H:%M")
          commit: ${{ env.CURRENT_BRANCH }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ${{ env.OPENWRT_ROOT_PATH }}/bin/targets/x86/64/*
          
          
      - name: Delete Older Releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
